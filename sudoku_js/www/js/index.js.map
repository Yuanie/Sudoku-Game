{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/core/toolkit.js","webpack:///./js/ui/grid.js","webpack:///./js/core/generator.js","webpack:///./js/index.js","webpack:///./js/core/sudoku.js","webpack:///./js/core/checker.js","webpack:///./js/ui/popupNum.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","matrixToolkit","makeRow","val","arr","Array","fill","makeMatrix","from","length","map","shuffle","endInd","j","Math","floor","random","checkFillable","matrix","num","rowIndex","colIndex","row","col","v","boxIndex","boxToolkit","convertToBoxIndex","box","getBoxCells","cellIndex","convertFromBoxIndex","startRowIndex","startColIndex","result","push","require","Sudoku","Checker","numberClass","Grid","container","this","_$container","makePuzzle","rowGroupClasses","colGroupClasses","$divArray","rowArray","cellValue","$span","$","addClass","text","css","$spanArray","append","width","height","matrixData","children","div","span","parseInt","toArray","$data","checker","check","marks","_matrixMarks","each","is","find","removeClass","empty","build","layout","popupNumbers","on","e","$cell","target","hasClass","popup","Toolkit","Generator","internalGenerate","console","warn","orders","x","every","fillNumber","fillRow","PopupNumbers","grid","bindPopup","alert","reset","clear","rebuild","generate","level","puzzleMatrix","_matrix","_success","array","checkRows","checkCols","checkBoxes","cell","rowMarks","checkArray","colMarks","forEach","boxMarks","$panel","_$panel","hide","_$targetCell","slideUp","slideDown"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,2gBC9ErD,IAAMC,EAAgB,CAEpBC,QAFoB,WAEH,IAATC,EAAS,uDAAH,EACRC,EAAM,IAAIC,MAAM,GACpB,OAAOD,EAAIE,KAAKH,IAIlBI,WARoB,WAQA,WAATJ,EAAS,uDAAH,EAEf,OAAOE,MAAMG,KAAK,CAChBC,OAAQ,IACPC,KAAI,kBAAM,EAAKR,QAAQC,OAM5BQ,QAlBoB,SAkBZP,GAEN,IADA,IAAIQ,EAASR,EAAIK,OAAS,EACjBxC,EAAI,EAAGA,GAAK2C,EAAQ3C,IAAK,CAEhC,IAAI4C,EAAI5C,EAAI6C,KAAKC,MAAMD,KAAKE,UAAYZ,EAAIK,OAASxC,IAFrB,EAIb,CAACmC,EAAIS,GAAIT,EAAInC,IAA/BmC,EAAInC,GAJ2B,KAIvBmC,EAAIS,GAJmB,KAMlC,SAAWT,IAMba,cAhCoB,SAgCNC,EAAQC,EAAKC,EAAUC,GAanC,IAXA,IAAMC,EAAMJ,EAAOE,GAEbG,EAAMlB,MAAMG,KAAK,CACrBC,OAAQ,IACPC,KAAI,SAACc,EAAGvD,GAAJ,OAAUiD,EAAOjD,GAAGoD,MAGzBI,EACEC,EAAWC,kBAAkBP,EAAUC,GADzCI,SAEIG,EAAMF,EAAWG,YAAYX,EAAQO,GAElCxD,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAIqD,EAAIrD,KAAOkD,GAAOI,EAAItD,KAAOkD,GAAOS,EAAI3D,KAAOkD,EACjD,OAAO,EAIX,OAAO,IAOLO,EAAa,CAGjBC,kBAHiB,SAGCP,EAAUC,GAC1B,MAAO,CACLI,SAAqC,EAA3BX,KAAKC,MAAMK,EAAW,GAASN,KAAKC,MAAMM,EAAW,GAC/DS,UAAYV,EAAW,EAAK,EAAIC,EAAW,IAK/CU,oBAXiB,SAWGN,EAAUK,GAC5B,MAAO,CACLV,SAAqC,EAA3BN,KAAKC,MAAMU,EAAW,GAASX,KAAKC,MAAMe,EAAY,GAChET,SAAWI,EAAW,EAAK,EAAIK,EAAY,IAK/CD,YAnBiB,SAmBLX,EAAQO,GAIlB,IAHA,IAAIO,EAA2C,EAA3BlB,KAAKC,MAAMU,EAAW,GACtCQ,EAAgBR,EAAW,EAAI,EAC7BS,EAAS,GACNjE,EAAI+D,EAAe/D,EAAI+D,EAAgB,EAAG/D,IACjD,IAAK,IAAI4C,EAAIoB,EAAepB,EAAIoB,EAAgB,EAAGpB,IACjDqB,EAAOC,KAAKjB,EAAOjD,GAAG4C,IAG1B,OAAOqB,IAKXlE,EAAOD,QAAP,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,8BAII,OAAOkC,IAJX,0BAQI,OAAOyB,M,EARX,O,2BAAA,M,sLC9FgBU,EAAQ,GACNA,EAAQ,GAD1B,IAEMC,EAASD,EAAQ,GACjBE,EAAUF,EAAQ,GAGlBG,EAAc,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEIC,E,WACJ,WAAYC,I,4FAAW,SAGrBC,KAAKC,YAAcF,E,uDAInB,IACMvB,GADS,IAAImB,GACGO,aAIhBC,EAAkB,CAAC,YAAa,eAAgB,gBAChDC,EAAkB,CAAC,aAAc,eAAgB,eAuBjDC,EArBS7B,EAAOR,KAAI,SAAAsC,GAAQ,OAAIA,EACnCtC,KAAI,SAACuC,EAAW5B,GACf,IAAI6B,EAAQC,EAAE,UAEXC,SAASN,EAAgBzB,EAAW,IACpCgC,KAAKJ,GACLG,SAASH,EAAY,QAAU,SAYlC,OALIA,EAAY,GACdC,EAAMI,IAAI,CACR,MAASf,EAAYU,KAGlBC,QAIRxC,KAAI,SAAC6C,EAAYnC,GAChB,OAAO+B,EAAE,SACNC,SAAS,OAETA,SAASP,EAAgBzB,EAAW,IACpCoC,OAAOD,MAGdb,KAAKC,YAAYa,OAAOT,K,+BAOxB,IAAMU,EAAQN,EAAE,aAAcT,KAAKC,aAAac,QAChDN,EAAE,OAAQT,KAAKC,aACZe,OAAOD,GACPH,IAAI,CACH,wBAAkBG,EAAlB,MACA,YAAaA,EAAQ,GAAR,UAAgBA,EAAM,EAAtB,MAA8B,O,8BAU/C,IAAME,EAAajB,KAAKC,YACrBiB,WAEAlD,KAAI,SAACU,EAAUyC,GACd,OAAOV,EAAEU,GACND,WAEAlD,KAAI,SAACW,EAAUyC,GAAX,OACHC,SAASZ,EAAEW,GAAMT,cAGtBW,UAEAtD,KAAI,SAACuD,GAAD,OAAWA,EAAMD,aAClBE,EAAU,IAAI5B,EAAQqB,GAC5B,GAAIO,EAAQC,QACV,OAAO,EAKT,IAAMC,EAAQF,EAAQG,aAEtB3B,KAAKC,YACFiB,WACAU,MAAK,SAAClD,EAAUyC,GACfV,EAAEU,GAAKD,WAAWU,MAAK,SAACjD,EAAUyC,GAG5BX,EAAEW,GAAMS,GAAG,WAAaH,EAAMhD,GAAUC,IAG5C8B,EAAEW,GAAMV,SAAS,iB,8BAWvBV,KAAKC,YAAY6B,KAAK,oBACnBC,YAAY,qBACZrB,SAAS,SACTC,KAAK,K,8BAORX,KAAKC,YAAY6B,KAAK,cACnBC,YAAY,W,gCAOf/B,KAAKC,YAAY+B,QACjBhC,KAAKiC,QACLjC,KAAKkC,W,gCAGGC,GAERnC,KAAKC,YAAYmC,GAAG,QAAS,QAAQ,SAAAC,GACnC,IAAMC,EAAQ7B,EAAE4B,EAAEE,QACdD,EAAME,SAAS,UAKnBL,EAAaM,MAAMH,W,gCAKzBhH,EAAOD,QAAUyE,G,sLCtKjB,IAAM4C,EAAUhD,EAAQ,GAClBiD,E,wLAEF,MAAQ3C,KAAK4C,oBAEXC,QAAQC,KAAK,YAEf,OAAO9C,KAAKxB,S,yCAGK,WAejB,OAZAwB,KAAKxB,OAASkE,EAAQlE,OAAOX,aAE7BmC,KAAK+C,OAASpF,MAAMG,KAAK,CACrBC,OAAQ,IAETC,KAAI,kBAAML,MAAMG,KAAK,CACpBC,OAAQ,IACP,SAACiF,EAAGzH,GAAJ,OAAUA,QACZyC,KAAI,SAAAY,GAAG,OAAI8D,EAAQlE,OAAOP,QAAQW,MAI9BjB,MAAMG,KAAK,CACdC,OAAQ,IAETkF,OAAM,SAACnE,EAAGvD,GAAJ,OAAU,EAAK2H,WAAW3H,EAAI,Q,iCAG9BkD,GAGT,OAAOuB,KAAKmD,QAAQ1E,EAAK,K,8BAGnBA,EAAKC,GACX,GAAIA,EAAW,EACb,OAAO,EAMT,IAHA,IAAI4B,EAAWN,KAAKxB,OAAOE,GAEvBqE,EAAS/C,KAAK+C,OAAOrE,GAChBnD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IAAMoD,EAAWoE,EAAOxH,GAExB,IAAI+E,EAAS3B,IAKR+D,EAAQlE,OAAOD,cAAcyB,KAAKxB,OAAQC,EAAKC,EAAUC,GAA9D,CAQA,GAJA2B,EAAS3B,GAAYF,EAIhBuB,KAAKmD,QAAQ1E,EAAKC,EAAW,GAKlC,OAAO,EAHL4B,EAAS3B,GAAY,GAKzB,OAAO,O,gCAIXrD,EAAOD,QAAUsH,G,gBC1EDjD,EAAQ,GAAxB,IAIMI,EAAOJ,EAAQ,GACf0D,EAAe1D,EAAQ,GAEvB2D,EAAO,IAAIvD,EAAKW,EAAE,eACxB4C,EAAKpB,QACLoB,EAAKnB,SAEL,IACMC,EAAe,IAAIiB,EADP3C,EAAE,WAEpB4C,EAAKC,UAAUnB,GAGf1B,EAAE,UAAU2B,GAAG,SAAS,SAAAC,GAClBgB,EAAK5B,SACP8B,MAAM,UAKV9C,EAAE,UAAU2B,GAAG,SAAS,SAAAC,GACtBgB,EAAKG,WAIP/C,EAAE,UAAU2B,GAAG,SAAS,SAAAC,GACtBgB,EAAKI,WAIPhD,EAAE,YAAY2B,GAAG,SAAS,SAAAC,GACxBgB,EAAKK,c,sLCjCP,IAAMf,EAAYjD,EAAQ,GAGpBC,GAFUD,EAAQ,G,WAGtB,c,4FAAc,SACZM,KAAKxB,QAAS,IAAImE,GAAYgB,W,4DAWV,IAAXC,EAAW,uDAAH,EAQjB,OAJA5D,KAAK6D,aAAe7D,KAAKxB,OAAOR,KAAI,SAACY,GACnC,OAAOA,EAAIZ,KAAI,SAACxB,GAAD,OAA2B,EAAhB4B,KAAKE,UAAgBsF,EAAQ,EAAIpH,QAGtDwD,KAAK6D,kB,iCAIhBvI,EAAOD,QAAUsE,G,sLC7BjB,IAAM+C,EAAUhD,EAAQ,GAGlBE,E,WACJ,WAAYpB,I,4FAAQ,SAClBwB,KAAK8D,QAAUtF,EAEfwB,KAAK2B,aAAee,EAAQlE,OAAOX,YAAW,GAC9CmC,KAAK+D,UAAW,E,yDAYAC,GAKhB,IAAMjG,EAASiG,EAAMjG,OACf2D,EAAQ,IAAI/D,MAAMI,GACxB2D,EAAM9D,MAAK,GAEX,IAAK,IAAIrC,EAAI,EAAGA,EAAIwC,EAAQxC,IAC1B,GAAKmG,EAAMnG,GAAX,CAIA,IAAIuD,EAAIkF,EAAMzI,GACd,GAAKuD,EAML,IAAK,IAAIX,EAAI5C,EAAI,EAAG4C,EAAIJ,EAAQI,IAC1BW,IAAMkF,EAAM7F,KACduD,EAAMnG,IAAK,EACXmG,EAAMvD,IAAK,QARbuD,EAAMnG,IAAK,EAYf,OAAOmG,M,iCASP,OAJA1B,KAAKiE,YACLjE,KAAKkE,YACLlE,KAAKmE,aACLnE,KAAK+D,SAAW/D,KAAK2B,aAAasB,OAAM,SAACrE,GAAD,OAASA,EAAIqE,OAAM,SAAAmB,GAAI,OAAa,IAATA,QAC5DpE,KAAK+D,W,kCAOZ,IAAK,IAAIxI,EAAI,EAAGA,EAAI,EAAGA,IAIrB,IAFA,IAAMqD,EAAMoB,KAAK8D,QAAQvI,GACnB8I,EAAWzE,EAAQ0E,WAAW1F,GAC3BT,EAAI,EAAGA,EAAI,EAAGA,IAEhBkG,EAASlG,KAEZ6B,KAAK2B,aAAapG,GAAG4C,IAAK,K,kCAOhC,IADU,sBACDA,GAOP,IALA,IAAMU,EAAMlB,MAAMG,KAAK,CACnBC,OAAQ,IAETC,KAAI,SAACc,EAAGvD,GAAJ,OAAU,EAAKuI,QAAQvI,GAAG4C,MAC3BoG,EAAW3E,EAAQ0E,WAAWzF,GAC3BtD,EAAI,EAAGA,EAAI,EAAGA,IAChBgJ,EAAShJ,KAEZ,EAAKoG,aAAapG,GAAG4C,IAAK,IAVvBA,EAAI,EAAGA,EAAI,EAAGA,IAAK,EAAnBA,K,mCAgBE,WAEGR,MAAMG,KAAK,CACrBC,OAAQ,IAETC,KAAI,SAACc,EAAGvD,GAAJ,OAAUmH,EAAQxD,IAAIC,YAAY,EAAK2E,QAASvI,MAEjDiJ,SAAQ,SAACtF,EAAKH,GAClB,IAAM0F,EAAW7E,EAAQ0E,WAAWpF,GACpCuF,EAASD,SAAQ,SAACJ,EAAMhF,GACtB,IAAKqF,EAASrF,GAAY,OAIpBsD,EAAQxD,IAAIG,oBAAoBN,EAAUK,GAF5CV,EAFsB,EAEtBA,SACAC,EAHsB,EAGtBA,SAEF,EAAKgD,aAAajD,GAAUC,IAAY,W,8BA/F9C,OAAOqB,KAAK+D,c,gCAsGhBzI,EAAOD,QAAUuE,G,sLCjHJF,EAAQ,GAArB,IAGM0D,E,WACJ,WAAYsB,GAAQ,Y,4FAAA,SAClB1E,KAAK2E,QAAUD,EAAOE,OAAO7C,YAAY,UAKzC/B,KAAK2E,QAAQvC,GAAG,QAAS,QAAQ,SAAAC,GAC/B,IAAMC,EAAQ,EAAKuC,aAEbrE,EAAQC,EAAE4B,EAAEE,QAEd/B,EAAMgC,SAAS,SAKbF,EAAME,SAAS,SACjBF,EAAMP,YAAY,SAElBO,EAAMP,YAAY,SAASrB,SAAS,SAE7BF,EAAMgC,SAAS,SAEpBF,EAAME,SAAS,SACjBF,EAAMP,YAAY,SAElBO,EAAMP,YAAY,SAASrB,SAAS,SAE7BF,EAAMgC,SAAS,SAExBF,EACG3B,KAAK,GACLoB,YAAY,SACZA,YAAY,SACZrB,SAAS,SAIZ4B,EACGP,YAAY,SACZpB,KAAKH,EAAMG,QACXD,SAHH,gBAGqBF,EAAMG,SAG7B,EAAKgE,QAAQG,QAAQ,Q,qDAKnBxC,GACJtC,KAAK6E,aAAevC,EACpBtC,KAAK2E,QAAQI,UAAU,U,gCAI3BzJ,EAAOD,QAAU+H","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","// 工具箱脚本\r\n/**\r\n * 矩阵数组实现工具函数\r\n */\r\nconst matrixToolkit = {\r\n  // 生成一行的代码\r\n  makeRow(val = 0) {\r\n    let arr = new Array(9);\r\n    return arr.fill(val);\r\n  },\r\n\r\n  // 生成矩阵\r\n  makeMatrix(val = 0) {\r\n    // val 为初始化矩阵的值\r\n    return Array.from({\r\n      length: 9\r\n    }).map(() => this.makeRow(val));\r\n  },\r\n\r\n  /** \r\n   * Fisher-Yates 洗牌算法\r\n   */\r\n  shuffle(arr) {\r\n    let endInd = arr.length - 2;\r\n    for (let i = 0; i <= endInd; i++) {\r\n      // 从索引i之后随机选择一个索引j\r\n      let j = i + Math.floor(Math.random() * (arr.length - i));\r\n      // 交换\r\n      [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return [...arr];\r\n  },\r\n\r\n  /**\r\n   * 检查填入的是否合适\r\n   */\r\n  checkFillable(matrix, num, rowIndex, colIndex) {\r\n    // 取出 rowIndex 这一行\r\n    const row = matrix[rowIndex];\r\n    // 取出 colIndex 这一列\r\n    const col = Array.from({\r\n      length: 9\r\n    }).map((v, i) => matrix[i][colIndex]);\r\n    // 取出当前宫\r\n    const {\r\n      boxIndex\r\n    } = boxToolkit.convertToBoxIndex(rowIndex, colIndex);\r\n    const box = boxToolkit.getBoxCells(matrix, boxIndex);\r\n    // 查看行、列和宫里是否存在num\r\n    for (let i = 0; i < 9; i++) {\r\n      if (row[i] === num || col[i] === num || box[i] === num) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * 宫坐标系工具函数\r\n */\r\nconst boxToolkit = {\r\n  // 从坐标系转换成宫坐标系\r\n  // 返回的是一个对象 有宫的索引boxIndex以及处于当前宫的索引cellIndex\r\n  convertToBoxIndex(rowIndex, colIndex) {\r\n    return {\r\n      boxIndex: Math.floor(rowIndex / 3) * 3 + Math.floor(colIndex / 3),\r\n      cellIndex: (rowIndex % 3) * 3 + colIndex % 3\r\n    }\r\n  },\r\n\r\n  // 从宫转换为坐标系 上面的逆运算\r\n  convertFromBoxIndex(boxIndex, cellIndex) {\r\n    return {\r\n      rowIndex: Math.floor(boxIndex / 3) * 3 + Math.floor(cellIndex / 3),\r\n      colIndex: (boxIndex % 3) * 3 + cellIndex % 3\r\n    }\r\n  },\r\n\r\n  // 获得boxIndex处的数组\r\n  getBoxCells(matrix, boxIndex) {\r\n    let startRowIndex = Math.floor(boxIndex / 3) * 3;\r\n    let startColIndex = boxIndex % 3 * 3;\r\n    const result = [];\r\n    for (let i = startRowIndex; i < startRowIndex + 3; i++) {\r\n      for (let j = startColIndex; j < startColIndex + 3; j++) {\r\n        result.push(matrix[i][j]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n};\r\n\r\n//  工具集类\r\nmodule.exports = class Toolkit {\r\n  // 通过 static 关键字定义静态方法\r\n  // 该方法不会被实例继承，而是直接通过类来调用\r\n  static get matrix() {\r\n    return matrixToolkit;\r\n  }\r\n\r\n  static get box() {\r\n    return boxToolkit;\r\n  }\r\n};","// 生成九宫格\r\nconst Toolkit = require(\"../core/toolkit\");\r\nconst Generator = require(\"../core/generator\");\r\nconst Sudoku = require(\"../core/sudoku\");\r\nconst Checker = require(\"../core/checker\");\r\n// 0-9设置的字体颜色\r\n// 0为白色 留给用户填写\r\nconst numberClass = [\r\n  \"#FFFFFF\",\r\n  \"#4876FF\",\r\n  \"#458B00\",\r\n  \"#CD6600\",\r\n  \"#27408B\",\r\n  \"#B22222\",\r\n  \"#48D1CC\",\r\n  \"#CD00CD\",\r\n  \"#EEC900\",\r\n  \"#000000\"\r\n];\r\nclass Grid {\r\n  constructor(container) {\r\n    // 私有变量\r\n    // container 是一个jquery变量\r\n    this._$container = container;\r\n  }\r\n\r\n  build() {\r\n    const sudoku = new Sudoku();\r\n    const matrix = sudoku.makePuzzle();\r\n    // 为每一个span添加类 tag\r\n    // 然后找出宫的方块加样式\r\n    // 之后可以尝试用 &:nth-child() 来为宫添加样式\r\n    const rowGroupClasses = ['row_g_top', 'row_g_middle', 'row_g_bottom'];\r\n    const colGroupClasses = ['col_g_left', 'col_g_middle', 'col_g_right'];\r\n\r\n    const $cells = matrix.map(rowArray => rowArray\r\n      .map((cellValue, colIndex) => {\r\n        let $span = $(\"<span>\")\r\n          // 为class=col_g_right 的方块加样式 \r\n          .addClass(colGroupClasses[colIndex % 3])\r\n          .text(cellValue)\r\n          .addClass(cellValue ? 'fixed' : 'empty');\r\n        // 为不同的数字设置不同颜色\r\n        // 0则赋予白色 留给用户填写\r\n        // 项目中一直有问题就是赋予背景色之后白色的0显现出来\r\n        // 因为此处对0赋予了 style内联式的样式 其级别大于其他选择器样式\r\n        // 因此在less表中修改无用\r\n        // 这里根据是否为0进行判断\r\n        if (cellValue > 0) {\r\n          $span.css({\r\n            \"color\": numberClass[cellValue]\r\n          })\r\n        }\r\n        return $span;\r\n      }));\r\n\r\n    const $divArray = $cells\r\n      .map(($spanArray, rowIndex) => {\r\n        return $(\"<div>\")\r\n          .addClass(\"row\")\r\n          // 为 class=row_g_bottom 的方块加样式\r\n          .addClass(rowGroupClasses[rowIndex % 3])\r\n          .append($spanArray);\r\n      });\r\n\r\n    this._$container.append($divArray);\r\n  }\r\n\r\n  layout() {\r\n    // jQuery(selector,context)\r\n    // 接收一个css选择器表达式(selector)和可选的选择器上下文(context)\r\n    // 返回一个包含了匹配的DOM元素的jQuery对象\r\n    const width = $(\"span:first\", this._$container).width();\r\n    $(\"span\", this._$container)\r\n      .height(width)\r\n      .css({\r\n        \"line-height\": `${width}px`,\r\n        \"font-size\": width < 32 ? `${width/2}px` : \"\"\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 检查用户解谜结果 如果成功进行提示\r\n   * 失败则进行标记\r\n   */\r\n  check() {\r\n    // 首先要得到面板的数据 matrixData\r\n    const matrixData = this._$container\r\n      .children()\r\n      // 对每个div进行检查\r\n      .map((rowIndex, div) => {\r\n        return $(div)\r\n          .children()\r\n          // 提取出每个span的数字\r\n          .map((colIndex, span) =>\r\n            parseInt($(span).text())\r\n          )\r\n      })\r\n      .toArray()\r\n      // 转换成数组\r\n      .map(($data) => $data.toArray());\r\n    const checker = new Checker(matrixData);\r\n    if (checker.check()) {\r\n      return true;\r\n    }\r\n\r\n    // 没有成功则进行标记\r\n    // 获取标记矩阵\r\n    const marks = checker._matrixMarks;\r\n    // 然后再遍历 如果有错的标记为error\r\n    this._$container\r\n      .children()\r\n      .each((rowIndex, div) => {\r\n        $(div).children().each((colIndex, span) => {\r\n          // 如果获取的是谜盘原有的固定数字\r\n          // 或者检查正确的 则不标记位error\r\n          if ($(span).is(\".fixed\") || marks[rowIndex][colIndex]) {\r\n            return;\r\n          }\r\n          $(span).addClass(\"error\");\r\n        })\r\n      });\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * 重置到初始状态\r\n   */\r\n  reset() {\r\n    this._$container.find(\"span:not(.fixed)\")\r\n      .removeClass(\"error mark1 mark2\")\r\n      .addClass(\"empty\")\r\n      .text(0);\r\n  }\r\n\r\n  /**\r\n   * 清除错误标记\r\n   */\r\n  clear() {\r\n    this._$container.find(\"span.error\")\r\n      .removeClass(\"error\");\r\n  }\r\n\r\n  /**\r\n   * 重建新的谜盘\r\n   */\r\n  rebuild() {\r\n    this._$container.empty();\r\n    this.build();\r\n    this.layout();\r\n  }\r\n\r\n  bindPopup(popupNumbers) {\r\n    // 弹出面板绑定的事件代理\r\n    this._$container.on(\"click\", \"span\", e => {\r\n      const $cell = $(e.target);\r\n      if ($cell.hasClass(\"fixed\")) {\r\n        // 点击固定的数字不会弹出面板\r\n        return;\r\n      }\r\n\r\n      popupNumbers.popup($cell);\r\n    })\r\n  }\r\n}\r\n\r\nmodule.exports = Grid;","// 生成数独解决方案\r\nconst Toolkit = require(\"./toolkit\");\r\nclass Generator {\r\n  generate() {\r\n    while (!this.internalGenerate()) {\r\n      // 不符合的次数\r\n      console.warn(\"rebuild!\");\r\n    }\r\n    return this.matrix;\r\n  }\r\n\r\n  internalGenerate() {\r\n    // 入口方法\r\n    // 生成矩阵\r\n    this.matrix = Toolkit.matrix.makeMatrix();\r\n    // 为随机选列生成一个0-8的数组\r\n    this.orders = Array.from({\r\n        length: 9\r\n      })\r\n      .map(() => Array.from({\r\n        length: 9\r\n      }, (x, i) => i))\r\n      .map(row => Toolkit.matrix.shuffle(row));\r\n\r\n    // 检查数字1-9是否满足填入要求\r\n    // 如果有一个不满足则返回false\r\n    return Array.from({\r\n        length: 9\r\n      })\r\n      .every((v, i) => this.fillNumber(i + 1));\r\n  }\r\n\r\n  fillNumber(num) {\r\n    // 递归函数入口\r\n    // 从第0行开始\r\n    return this.fillRow(num, 0);\r\n  }\r\n\r\n  fillRow(num, rowIndex) {\r\n    if (rowIndex > 8) {\r\n      return true;\r\n    }\r\n    // 取出当前行的数组\r\n    let rowArray = this.matrix[rowIndex];\r\n    // 具有随机列索引的矩阵\r\n    let orders = this.orders[rowIndex];\r\n    for (let i = 0; i < 9; i++) {\r\n      // 随机选择列\r\n      const colIndex = orders[i];\r\n      // 如果当前列有值\r\n      if (rowArray[colIndex]) {\r\n        continue;\r\n      }\r\n      // 检查这个位置是否能填入\r\n      // 如果不能填入则继续\r\n      if (!Toolkit.matrix.checkFillable(this.matrix, num, rowIndex, colIndex)) {\r\n        continue;\r\n      }\r\n      // 填入\r\n      rowArray[colIndex] = num;\r\n\r\n      // 进行下一行操作\r\n      // 如果下一行不能填入num 则回溯\r\n      if (!this.fillRow(num, rowIndex + 1)) {\r\n        // 重新置0\r\n        rowArray[colIndex] = 0;\r\n        continue;\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nmodule.exports = Generator;","const Toolkit = require(\"./core/toolkit\");\r\n// Array.from() 方法从一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例\r\n// Array.from() 方法有一个可选参数 mapFn，让你可以在最后生成的数组上再执行一次 map 方法后再返回\r\n\r\nconst Grid = require(\"./ui/grid\");\r\nconst PopupNumbers = require(\"./ui/popupNum\");\r\n\r\nconst grid = new Grid($(\"#container\"));\r\ngrid.build();\r\ngrid.layout();\r\n\r\nconst $popupDom = $(\"#popup\");\r\nconst popupNumbers = new PopupNumbers($popupDom);\r\ngrid.bindPopup(popupNumbers);\r\n\r\n// 检查面板的事件\r\n$(\"#check\").on(\"click\", e => {\r\n  if (grid.check()) {\r\n    alert(\"成功！\");\r\n  }\r\n});\r\n\r\n// 重置面板的事件\r\n$(\"#reset\").on(\"click\", e => {\r\n  grid.reset();\r\n});\r\n\r\n// 清空面板的事件 清除所有错误标记\r\n$(\"#clear\").on(\"click\", e => {\r\n  grid.clear();\r\n});\r\n\r\n// 重建面板 新建一局\r\n$(\"#rebuild\").on(\"click\", e => {\r\n  grid.rebuild();\r\n});","// 生成数独游戏\r\nconst Generator = require(\"./generator\");\r\nconst Toolkit = require(\"./toolkit\");\r\n\r\nclass Sudoku {\r\n  constructor() {\r\n    this.matrix = new Generator().generate();\r\n  }\r\n  /**\r\n   * 根据内部的数独解决方案，生成一个随机谜盘。\r\n   * level 表示难度等级。\r\n   * level 越大表示越难，但 level 不能超过 8，最好是在 3~7 之间\r\n   * level = 3 easy mode\r\n   * level = 5 medium mode\r\n   * level = 7 hard mode\r\n   */\r\n\r\n  makePuzzle(level = 5) {\r\n    // 数独的每一行有9个元素\r\n    // level数值即代表随机丢弃这么多个数字\r\n    // 为了做样式处理 将欲丢弃的数字设为0\r\n    this.puzzleMatrix = this.matrix.map((row) => {\r\n      return row.map((value) => Math.random() * 9 <= level ? 0 : value);\r\n    })\r\n\r\n    return this.puzzleMatrix;\r\n  }\r\n}\r\n\r\nmodule.exports = Sudoku;","const Toolkit = require(\"./toolkit\");\r\n// 检查数独的解决方案\r\n// 检查数组含有0或者重复\r\nclass Checker {\r\n  constructor(matrix) {\r\n    this._matrix = matrix;\r\n    // 标记矩阵赋初值\r\n    this._matrixMarks = Toolkit.matrix.makeMatrix(true);\r\n    this._success = true;\r\n  }\r\n\r\n  /**\r\n   * 需要在调用 check() 之后使用，指示检查是否成功(即完全符合数独规则)\r\n   */\r\n  get success() {\r\n    return this._success;\r\n  }\r\n\r\n  // class中static声明的变量或者函数，是function的属性\r\n  // 静态方法在一启动时就实例化了，因而静态内存是连续的，且静态内存是有限制的\r\n  static checkArray(array) {\r\n    // 标记位\r\n    // 有问题的则标记为false\r\n    // 1. 存在0元素\r\n    // 2. 后续存在重复项\r\n    const length = array.length;\r\n    const marks = new Array(length);\r\n    marks.fill(true);\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      if (!marks[i]) {\r\n        // 如果当前位置有问题 直接跳过\r\n        continue;\r\n      }\r\n      let v = array[i];\r\n      if (!v) {\r\n        marks[i] = false;\r\n        continue;\r\n      }\r\n      // 检查后续是否有重复项\r\n      // 之后再想想有没有优化\r\n      for (let j = i + 1; j < length; j++) {\r\n        if (v === array[j]) {\r\n          marks[i] = false;\r\n          marks[j] = false;\r\n        }\r\n      }\r\n    }\r\n    return marks;\r\n  }\r\n\r\n  check() {\r\n    // 分别检查行、列、宫\r\n    this.checkRows();\r\n    this.checkCols();\r\n    this.checkBoxes();\r\n    this._success = this._matrixMarks.every((row) => row.every(cell => cell === true));\r\n    return this._success;\r\n  }\r\n\r\n\r\n  // const只能保证这个指针是固定的，至于它指向的数据结构是不是可变的，就完全不能控制了\r\n  checkRows() {\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      // 行\r\n      const row = this._matrix[i];\r\n      const rowMarks = Checker.checkArray(row);\r\n      for (let j = 0; j < 9; j++) {\r\n        // 列\r\n        if (!rowMarks[j]) {\r\n          // 如果当前行第j列有错误标记\r\n          this._matrixMarks[i][j] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCols() {\r\n    for (let j = 0; j < 9; j++) {\r\n      // 列\r\n      const col = Array.from({\r\n          length: 9\r\n        })\r\n        .map((v, i) => this._matrix[i][j]);\r\n      const colMarks = Checker.checkArray(col);\r\n      for (let i = 0; i < 9; i++) {\r\n        if (!colMarks[i]) {\r\n          // 如果当前列第i行有错误标记\r\n          this._matrixMarks[i][j] = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkBoxes() {\r\n    // 首先获取每个宫生成的数组矩阵\r\n    const boxes = Array.from({\r\n        length: 9\r\n      })\r\n      .map((v, i) => Toolkit.box.getBoxCells(this._matrix, i));\r\n    // 对每一个宫进行检查\r\n    boxes.forEach((box, boxIndex) => {\r\n      const boxMarks = Checker.checkArray(box);\r\n      boxMarks.forEach((cell, cellIndex) => {\r\n        if (!boxMarks[cellIndex]) {\r\n          const {\r\n            rowIndex,\r\n            colIndex\r\n          } = Toolkit.box.convertFromBoxIndex(boxIndex, cellIndex);\r\n          this._matrixMarks[rowIndex][colIndex] = false;\r\n        }\r\n      })\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = Checker;","// 处理弹出的操作面板\r\n\r\n// cell --> (click) --> popup\r\n// popup --> (click) --> n --> (fill) --> cell\r\nconst Grid = require(\"./grid\")\r\n// 字体颜色\r\n\r\nclass PopupNumbers {\r\n  constructor($panel) {\r\n    this._$panel = $panel.hide().removeClass(\"hidden\")\r\n\r\n    // 面板上的事件代理\r\n    // 填入数字或mark的样式\r\n    // 填入数字或样式后 面板应该消失\r\n    this._$panel.on(\"click\", \"span\", e => {\r\n      const $cell = this._$targetCell\r\n\r\n      const $span = $(e.target)\r\n\r\n      if ($span.hasClass(\"mark1\")) {\r\n        // 如果点击的span为mark1\r\n        // 首先查看单元格cell是否具有mark1样式\r\n        // 如果有 则移除\r\n        // 如果没有 则移除mark2并加上样式mark1\r\n        if ($cell.hasClass(\"mark1\")) {\r\n          $cell.removeClass(\"mark1\")\r\n        } else {\r\n          $cell.removeClass(\"mark2\").addClass(\"mark1\")\r\n        }\r\n      } else if ($span.hasClass(\"mark2\")) {\r\n        // 同理\r\n        if ($cell.hasClass(\"mark2\")) {\r\n          $cell.removeClass(\"mark2\")\r\n        } else {\r\n          $cell.removeClass(\"mark1\").addClass(\"mark2\")\r\n        }\r\n      } else if ($span.hasClass(\"empty\")) {\r\n        // 如果点的空白块\r\n        $cell\r\n          .text(0)\r\n          .removeClass(\"mark1\")\r\n          .removeClass(\"mark2\")\r\n          .addClass(\"empty\")\r\n      } else {\r\n        // 填入数字\r\n        // 移除empty类 并添加上面板上点击的数字\r\n        $cell\r\n          .removeClass(\"empty\")\r\n          .text($span.text())\r\n          .addClass(`color-${$span.text()}`)\r\n      }\r\n      // 点击完之后需要关闭面板\r\n      this._$panel.slideUp(500);\r\n    })\r\n  }\r\n\r\n  // 将弹出面板固定位置\r\n  popup($cell) {\r\n    this._$targetCell = $cell;\r\n    this._$panel.slideDown(500);\r\n  }\r\n}\r\n\r\nmodule.exports = PopupNumbers"],"sourceRoot":""}